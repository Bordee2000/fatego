{"remainingRequest":"D:\\KMITL\\ปี 2 เทอม 2\\Web Programming\\fatego\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\KMITL\\ปี 2 เทอม 2\\Web Programming\\fatego\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\KMITL\\ปี 2 เทอม 2\\Web Programming\\fatego\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\KMITL\\ปี 2 เทอม 2\\Web Programming\\fatego\\frontend\\src\\views\\servant\\servantDetail.vue?vue&type=template&id=78cb029a&","dependencies":[{"path":"D:\\KMITL\\ปี 2 เทอม 2\\Web Programming\\fatego\\frontend\\src\\views\\servant\\servantDetail.vue","mtime":1619535037506},{"path":"D:\\KMITL\\ปี 2 เทอม 2\\Web Programming\\fatego\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1619535032635},{"path":"D:\\KMITL\\ปี 2 เทอม 2\\Web Programming\\fatego\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1619535037076},{"path":"D:\\KMITL\\ปี 2 เทอม 2\\Web Programming\\fatego\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1619535032635},{"path":"D:\\KMITL\\ปี 2 เทอม 2\\Web Programming\\fatego\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1619535037075}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}